{"version":3,"sources":["store/actions.js","store/reducer.js","store/store.js","components/Registration/index.js","components/Contact/Contact.js","components/Preloader/index.js","components/Contacts/Contacts.js","components/Contacts/index.js","components/HomePage/HomePage.js","components/HomePage/index.js","components/Profile/Profile.js","components/Nav/Nav.js","components/Form/Form.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["ACTION_TYPES","HANDLE_SUCCESS_FACEBOOK","HANDLE_SUCCESS_CONTACTS","PRELOADER","handleSuccessFacebook","result","userKey","type","payload","preLoader","connectWithDB","name","pass","confirmPass","dispatch","a","async","HANDLE_SUBMIT_REGISTER","initialState","info","entries","API","Auth","Category","Cors","Description","HTTPS","Link","contacts","isLoading","userKeyFlag","reducer","state","action","createRootReducer","history","combineReducers","router","connectRouter","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","Registration","handleSubmit","event","props","nameValue","passValue","confirmPassValue","preventDefault","console","log","values","className","htmlFor","Field","component","onChange","setState","target","value","id","onClick","this","React","Component","reduxForm","Contact","contact","src","picture","medium","alt","registered","date","slice","first","last","location","city","email","PreLoader","Contacts","componentDidMount","loadContactsData","map","key","cell","mapDispatchToProps","fetch","response","json","results","connect","ApiFields","HomePage","loadFacebookData","field","Profile","data","JSON","parse","localStorage","getItem","login","large","title","username","country","Nav","handleLogOut","clear","push","to","withRouter","API_URL","Form","handleSubmitResult","loginValue","passwordValue","handleSubmitFacebook","userData","sha256","setItem","stringify","handleRegistration","rest","render","App","path","exact","ReactDOM","store","createStore","applyMiddleware","routerMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.af7e8d8b.chunk.js","sourcesContent":["//import { axios } from \"axios\";\r\n\r\nexport const ACTION_TYPES = {\r\n    LOGIN: 'LOGIN',\r\n    PRELOADER: 'PRELOADER',\r\n    HANDLE_SUCCESS_CONTACTS: 'HANDLE_SUCCESS_CONTACTS',\r\n    HANDLE_SUCCESS_FACEBOOK: 'HANDLE_SUCCESS_FACEBOOK',\r\n    HANDLE_SUBMIT_REGISTER: 'HANDLE_SUBMIT_REGISTER',\r\n    };\r\n  \r\nconst {\r\n  HANDLE_SUCCESS_FACEBOOK,\r\n  HANDLE_SUCCESS_CONTACTS,\r\n  HANDLE_SUBMIT_REGISTER,\r\n  PRELOADER,  \r\n} = ACTION_TYPES;\r\n\r\nconst API_URL_INFO = 'https://api.publicapis.org/random';\r\nconst API_URL_CONTACTS = 'https://randomuser.me/api/?page=1&results=10&seed=abc';\r\n\r\n//actions\r\nexport const handleSuccessFacebook = ({ result, userKey }) => ({\r\n    type: HANDLE_SUCCESS_FACEBOOK,\r\n    payload: { result, userKey },\r\n});\r\n\r\nexport const handleSubmitRegister = ({ name, pass }) => ({\r\n    type: HANDLE_SUBMIT_REGISTER,\r\n    payload: { name, pass },\r\n});\r\n\r\nexport const handleSuccessContacts = payload => {\r\n    return {\r\n    type: HANDLE_SUCCESS_CONTACTS,\r\n    payload,\r\n}};\r\n\r\nexport const preLoader = () => ({ type: PRELOADER });\r\n\r\n//functions\r\nexport const connectWithDB = (name, pass, confirmPass) => async dispatch => {\r\n    \r\n    //     console.log('ddd');\r\n    // const response = await axios.post(`mongodb+srv://cluster0-jyrjb.mongodb.net/test`)\r\n    //     .then(res => {\r\n    //       console.log(res);\r\n    //     });\r\n    // const result = response.json();\r\n\r\n    //dispatch(handleSubmitRegister({ name, pass, confirm }));\r\n}\r\n\r\nexport const loadFacebookData = () => async dispatch => {\r\n    console.log('rrr');\r\n    const response = await fetch(API_URL_INFO);\r\n    const info = await response.json();\r\n    const result = info.entries[0];\r\n\r\n    dispatch(handleSuccessFacebook({ result }));\r\n}\r\n\r\nexport const loadContactsData = () => async dispatch => {\r\n    const response = await fetch(API_URL_CONTACTS);\r\n    const { results } = await response.json();\r\n    \r\n    dispatch(handleSuccessContacts(results));\r\n}\r\n\r\n  ","import { ACTION_TYPES } from './actions';\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst {\r\n  HANDLE_SUCCESS_FACEBOOK,\r\n  HANDLE_SUCCESS_CONTACTS,\r\n  HANDLE_SUBMIT_REGISTER,\r\n  PRELOADER,\r\n} = ACTION_TYPES;\r\n\r\nexport const initialState = {\r\n  info: {\r\n      entries: [\r\n        {\r\n          API: '',\r\n          Auth: '',\r\n          Category: '',\r\n          Cors: '',\r\n          Description: '',\r\n          HTTPS: '',\r\n          Link: '',\r\n        }\r\n      ],\r\n    },\r\n  contacts: [],  \r\n  isLoading: false,  \r\n  userKeyFlag: false,\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    case HANDLE_SUCCESS_FACEBOOK:\r\n      return {\r\n        ...state,\r\n        info: action.payload.result,\r\n        userKeyFlag: !!action.payload.userKey,\r\n        isLoading: false,\r\n        };\r\n\r\n    case HANDLE_SUCCESS_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        userKeyFlag: !!action.payload.userKey,\r\n        isLoading: false,\r\n        };\r\n\r\n    case HANDLE_SUBMIT_REGISTER:\r\n        const user = {\r\n          name: action.payload.name,\r\n          pass: action.payload.pass,\r\n        }       \r\n\r\n      return {\r\n        ...state,\r\n        };    \r\n\r\n    case PRELOADER:\r\n      return {\r\n        ...state,        \r\n        isLoading: true,\r\n        };    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  reducer,\r\n  form: formReducer,\r\n});","import thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createRootReducer } from './reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const history = createBrowserHistory();\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        thunk\r\n      ),\r\n    ),\r\n  )\r\n  return store\r\n}\r\n","import React from 'react';\r\nimport { Switch, withRouter } from 'react-router-dom';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nimport { connectWithDB } from '../../store/actions.js';\r\n\r\nclass Registration extends React.Component {\r\n  state = {\r\n  }\r\n \r\n  handleSubmit = (event) => {\r\n    const { \r\n      nameValue,\r\n      passValue,\r\n      confirmPassValue\r\n    } = this.props;\r\n\r\n    event.preventDefault();\r\n    if (passValue === confirmPassValue ) {\r\n      console.log(this.props.values, passValue, confirmPassValue);\r\n      connectWithDB(nameValue, passValue, confirmPassValue);\r\n      //this.props.history.push('/');\r\n    }   \r\n  }\r\n\r\n \r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <h1>Register please</h1>\r\n        <form className=\"form registration-form\">\r\n          <label className=\"label\" htmlFor=\"login\">\r\n            login:\r\n            <Field\r\n              name=\"login\"\r\n              component=\"input\"\r\n              onChange={(event) => { this.setState({ nameValue: event.target.value }); }}\r\n              id=\"login\"\r\n              type=\"text\"\r\n            />            \r\n          </label>\r\n          <label className=\"label\" htmlFor=\"password\">\r\n            password:\r\n            <Field\r\n              name=\"password\"\r\n              component=\"input\"\r\n              onChange={(event) => { this.setState({ passValue: event.target.value }); }}\r\n              id=\"password\"\r\n              type=\"password\"\r\n            />            \r\n          </label>\r\n          <label className=\"label\" htmlFor=\"confirm-password\">\r\n            confirm:\r\n            <Field\r\n              name=\"confirm-password\"\r\n              component=\"input\"\r\n              onChange={(event) => { this.setState({ confirmPassValue: event.target.value }); }}\r\n              id=\"confirm-password\"\r\n              type=\"password\"\r\n            />            \r\n          </label>\r\n          <button\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Register\r\n          </button>\r\n        </form>        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n Registration = reduxForm({\r\n   form: 'registration'\r\n })(Registration);\r\n\r\nexport default Registration;","import React from 'react';\n\nimport './Contact.scss';\n\nconst Contact = ({ contact }) => {\n    return (\n      <div className=\"contact\">\n        <img className=\"contact__img\" src={contact.picture.medium} alt=\"contact\" />\n          <div className=\"contact__info\">\n            <p className=\"contact__registered\">\n              {contact.registered.date.slice(0, 10)}\n            </p>\n            <p className=\"contact__name\">\n              {contact.name.first + '' + contact.name.last}\n            </p>\n            <p className=\"contact__body\">\n              {contact.location.city}\n            </p>\n            <p className=\"contact__email\">\n              {contact.email}\n            </p>\n          </div>\n      </div>\n    );\n};\n\nexport default Contact;\n","import React from 'react';\r\nimport './style.scss';\r\n\r\n\r\nconst PreLoader = () => {\r\n    return (<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>);\r\n}\r\n\r\nexport default PreLoader;","import React, { Component } from 'react';\n\nimport Contact from '../Contact/Contact';\nimport PreLoader from  '../Preloader';\nimport './Contacts.scss';\n\nclass Contacts extends Component {\n  state = {}\n\n  componentDidMount = async() => {\n    this.props.preLoader();\n    this.props.loadContactsData();\n  }\n\n  render() {\n    const { isLoading, contacts } = this.props;\n    \n    return (isLoading\n      ? (<>\n        <PreLoader />\n      </>)\n      : (<>\n        <div className=\"contacts-list\">\n          {contacts.map(contact => (\n              <Contact\n                key={contact.cell}\n                contact={contact}\n              />\n            )\n          )}\n        </div>\n      </>));\n  }\n};\n\nexport default Contacts;\n","import { connect } from 'react-redux';\r\n\r\nimport Contacts from './Contacts';\r\nimport { loadContactsData, preLoader } from '../../store/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userKeyFlag: state.reducer.userKeyFlag,\r\n        contacts: state.reducer.contacts,\r\n        isLoading: state.reducer.isLoading,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContactsData,\r\n    preLoader,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Contacts);","import React, { Component, Fragment } from 'react';\n\nimport PreLoader from  '../Preloader';\nimport './HomePage.scss';\n\nconst ApiFields = [\n    'API',\n    'Auth',\n    'Category',\n    'Cors',\n    'Description',\n    'HTTPS',\n    'Link'\n]\n\nclass HomePage extends Component {\n  state = {\n   }\n\n  componentDidMount = () => {\n    const {loadFacebookData, preLoader } = this.props;\n    preLoader();\n    loadFacebookData();  \n  }  \n\n  render () {\n    return (\n      <>\n        <div className=\"home-page\">\n          {!this.props.isLoading \n            ? (\n                <div className=\"api\">\n                  {ApiFields.map( field => (\n                    <Fragment key={field}>\n                      <p>{field}</p>\n                      <p>{this.props.info[field]}</p>\n                    </Fragment>\n                  ))}                \n                </div>              \n              )\n            : (<PreLoader />)\n          }            \n        </div>\n    </>\n    )\n  }\n}\n\nexport default HomePage;\n","import { connect } from 'react-redux';\r\n\r\nimport HomePage from './HomePage';\r\nimport { loadFacebookData, preLoader } from '../../store/actions';\r\n\r\nconst mapStateToProps = ({ reducer }) => {\r\n    return {\r\n        userKeyFlag: reducer.userKeyFlag,\r\n        info: reducer.info,\r\n        isLoading: reducer.isLoading,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadFacebookData,\r\n    preLoader,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);","import React from 'react';\n\nimport './Profile.scss'\n\nconst Profile = () => {\n    const data = JSON.parse(localStorage.getItem('userData'));\n    //const userKey = JSON.parse(localStorage.getItem('userKey'));\n\n    if (data.results) {\n        const { name, picture, location, email, login } = data.results[0];\n        return (\n            <>\n                <h1>Profile</h1>\n                <div className=\"user\">\n                    <img className=\"user__image\" src={picture.large} alt=\"user\" />\n                    <div className=\"user__info\">\n                    <div className=\"user__label\">Name:</div>\n                        <div className=\"user__name\">{\n                            name.title + ' ' + name.first + ' ' + name.last\n                        }\n                        </div>\n                        <div className=\"user__label\">Nick:</div>\n                        <div className=\"user__username\">{\n                            login.username\n                        }</div>\n                        <div className=\"user__label\">Country:</div>\n                        <div className=\"user__country\">{\n                            location.country\n                        }</div>\n                        <div className=\"user__label\">City:</div>\n\n                        <div className=\"user__name\">{\n                            location.city\n                        }</div>\n                        <div className=\"user__label\">Email:</div>\n                        <div className=\"user__email\">{\n                            email\n                        }</div>\n                    </div>\n                    \n                </div>\n\n            </>\n        );\n    }    \n\n    return (\n        <>\n        <h1>Profile</h1>\n        <div></div>\n        </>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Nav extends React.Component {\n\n    handleLogOut = () => {\n        localStorage.clear();   \n             this.props.history.push('/autorise');\n    }\n\n    render() {\n        return (<>\n            <nav className=\"nav\">\n                <NavLink className=\"nav-link\"  to=\"/\">Главная</NavLink>\n                <NavLink className=\"nav-link\"  to=\"/contacts\">Контакты</NavLink>\n                <NavLink className=\"nav-link\"  to=\"/profile\">Профиль</NavLink>\n            </nav>\n            <button\n                type=\"button\"\n                className=\"logout\"\n                onClick={this.handleLogOut}\n            ></button>\n        </>)\n    }\n\n    ;\n};\n\n\nexport default withRouter(Nav);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Form.scss';\n\nconst API_URL = 'https://randomuser.me/api/'\n\nclass Form extends React.Component {\n  state = {\n    handleSubmitResult: 0,\n    loginValue: '',\n    passwordValue: '',\n  } \n\n  handleSubmitFacebook = async() => {  \n    try{\n      const response = await fetch(API_URL);\n      const userData = await response.json();\n      const userKey = userData.results[0].login.sha256;\n      localStorage.setItem('userData', JSON.stringify(userData));\n      localStorage.setItem('userKey', JSON.stringify(userKey));\n      this.props.history.push('/');\n      } catch (e) {\n         console.log(e);\n        }             \n  }\n\n  handleRegistration = () => {\n    this.props.history.push('/register');\n  }\n\n  render() {\n    const {\n      handleSubmitResult,\n      loginValue,\n      passwordValue\n    } = this.state;    \n\n    return (\n      <>\n        <h1>Login please</h1>\n        <form className=\"form\">\n          <label className=\"label\" htmlFor=\"login\">\n            login:\n            <input\n              value={loginValue}\n              onChange={(event) => { this.setState({ loginValue: event.target.value }); }}\n              id=\"login\"\n              type=\"text\"\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"password\">\n            password:\n            <input\n              value={passwordValue}\n              onChange={(event) => { this.setState({ passwordValue: event.target.value }); }}\n              id=\"password\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            className=\"button\"\n            type=\"submit\"\n            onClick={this.handleRegistration}\n          >\n                Register\n          </button>\n          <button\n            className=\"button\"\n            type=\"submit\"\n          >\n                Login\n          </button>\n          <button\n            className=\"login-facebook\"\n            type=\"button\"\n            onClick={this.handleSubmitFacebook}\n          ></button>\n        </form>\n        {handleSubmitResult === 1\n          && (\n            <p className=\"error\">\n          The data is entered incorrectly.\n            </p>\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default withRouter(Form);\n\n","import React from 'react';\r\nimport { Route, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest} \r\n            render={props => {\r\n                if (window.localStorage.getItem('userKey')) {\r\n                    return (\r\n                        <Component {...props} />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <Redirect to=\"/autorise\" />\r\n                )\r\n                    }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(ProtectedRoute);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Registration from './components/Registration';\nimport Contacts from './components/Contacts';\nimport HomePage from './components/HomePage';\nimport Profile from './components/Profile/Profile';\nimport Nav from './components/Nav/Nav';\nimport Form from './components/Form/Form';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.scss';\n\nconst App = () => (\n  <Switch>\n    <Route path=\"/autorise\" component={Form} />\n    <Route path=\"/register\" component={Registration} />          \n    <>\n      <Nav />\n      <Switch>\n        <ProtectedRoute exact path=\"/\" component={HomePage} /> \n        <ProtectedRoute path=\"/contacts\" component={Contacts} /> \n        <ProtectedRoute path=\"/profile\" component={Profile} />            \n      </Switch>\n    </> \n  </Switch>\n);\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/store';\nimport App from './App';\n\nconst history = createBrowserHistory();\n\nReactDOM.render((\n  <Provider store={configureStore()}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}