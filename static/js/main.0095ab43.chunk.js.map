{"version":3,"sources":["store/actions.js","store/reducer.js","store/sagas/sagas.js","store/store.js","components/Registration/index.js","components/Contact/Contact.js","components/Preloader/index.js","components/Contacts/Contacts.js","components/Contacts/index.js","components/HomePage/HomePage.js","components/HomePage/index.js","components/Profile/Profile.js","components/Nav/Nav.js","components/Form/Form.js","components/ProtectedRoute/index.js","components/ContactCard/index.js","components/User/User.js","components/User/index.js","components/AddCommentForm/AddCommentForm.js","components/EditCommentForm/index.js","components/UserPosts/UserPosts.js","components/UserPosts/index.js","components/User/UserInfo/UserInfo.js","components/User/UserInfo/index.js","App.js","index.js"],"names":["ACTION_TYPES","HANDLE_SUCCESS_FACEBOOK","HANDLE_SUCCESS_CONTACTS","HANDLE_SUCCESS_POSTLIST","HANDLE_SUCCESS_USERLIST","HANDLE_SUCCESS_COMMENTS","HANDLE_DELETE_COMMENT","HANDLE_EDIT_COMMENT","HANDLE_OPEN_USER","PRELOADER","preLoader","type","loadContactsData","dispatch","a","async","axios","get","then","res","result","data","results","payload","initialState","info","entries","API","Auth","Category","Cors","Description","HTTPS","Link","comment","name","body","id","user","posts","contacts","isLoading","userKeyFlag","reducer","state","action","userKey","comments","filter","values","UserCommentTitle","UserCommentBody","userList","createRootReducer","history","combineReducers","router","connectRouter","form","formReducer","helloSaga","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","sagaMiddleware","createSagaMiddleware","reduxForm","handleSubmit","className","htmlFor","Field","component","Contact","contact","src","picture","medium","alt","registered","date","slice","first","last","location","city","email","PreLoader","Contacts","props","this","map","key","cell","Component","mapDispatchToProps","connect","ApiFields","HomePage","loadFacebookData","field","handleSuccessFacebook","Profile","JSON","parse","localStorage","getItem","login","large","title","username","country","Nav","handleLogOut","bind","clear","push","to","onClick","React","withRouter","API_URL","Form","handleSubmitResult","loginValue","passwordValue","handleSubmitFacebook","fetch","response","json","userData","sha256","setItem","stringify","handleRegistration","value","onChange","event","setState","target","rest","render","brownBack","brown","useStyles","makeStyles","theme","root","justifyContent","maxWidth","margin","padding","paper","width","box","backgroundColor","marginTop","borderRadius","box_son","textAlign","fontSize","box_son2","buttonLookPosts","color","position","right","boxShadow","control","spacing","ContactCard","useState","classes","Grid","container","justify","style","border","height","img","Box","address","paddingTop","display","href","website","rel","loadPostList","loadUserList","loadCommentList","useEffect","userIndex","userWithImage","find","index","item","Paper","Button","onClickUser","openUserPosts","variant","User","onSubmit","grayBack","grey","flexGrow","palette","text","secondary","grid","typography","fontFamily","deleteComment","URL","delete","editComment","put","catch","error","stateComment","currentUser","isEditing","setEdit","postsArray","post","userId","findPosts","handleSubmitEdit","handleSaveEditedComment","bgcolor","xs","postIndex","com","postId","postTitle","toUpperCase","postBody","Typography","paragraph","align","commentName","commentBody","editedCommentName","editedCommentBody","editedCommentId","IconButton","aria-label","handleDeleteComment","Fab","size","initialValues","alignContent","UserInfo","App","path","Registration","exact","ReactDOM","store","createStore","applyMiddleware","routerMiddleware","thunk","run","configureStore","document","getElementById"],"mappings":"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","file":"static/js/main.0095ab43.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  PRELOADER: \"PRELOADER\",\n  HANDLE_SUCCESS_CONTACTS: \"HANDLE_SUCCESS_CONTACTS\",\n  HANDLE_SUCCESS_FACEBOOK: \"HANDLE_SUCCESS_FACEBOOK\",\n  HANDLE_SUCCESS_POSTLIST: \"HANDLE_SUCCESS_POSTLIST\",\n  HANDLE_SUCCESS_USERLIST: \"HANDLE_SUCCESS_USERLIST\",\n  HANDLE_SUBMIT_REGISTER: \"HANDLE_SUBMIT_REGISTER\",\n  HANDLE_SUCCESS_COMMENTS: \"HANDLE_SUCCESS_COMMENTS\",\n  HANDLE_OPEN_USER: \"HANDLE_OPEN_USER\",\n  HANDLE_DELETE_COMMENT: \"HANDLE_DELETE_COMMENT\",\n  HANDLE_EDIT_COMMENT: \"HANDLE_EDIT_COMMENT\"\n};\n\nconst {\n  HANDLE_SUCCESS_FACEBOOK,\n  HANDLE_SUCCESS_CONTACTS,\n  HANDLE_SUBMIT_REGISTER,\n  HANDLE_SUCCESS_POSTLIST,\n  HANDLE_SUCCESS_USERLIST,\n  HANDLE_SUCCESS_COMMENTS,\n  HANDLE_DELETE_COMMENT,\n  HANDLE_EDIT_COMMENT,\n  HANDLE_OPEN_USER,\n  PRELOADER\n} = ACTION_TYPES;\n\nconst API_URL_INFO = \"https://api.publicapis.org/random\";\nconst API_URL_CONTACTS =\n  \"https://randomuser.me/api/?page=1&results=10&seed=abc\";\nconst API_URL_POSTLIST = \"http://jsonplaceholder.typicode.com/posts\";\nconst API_URL_USERLIST = \"http://jsonplaceholder.typicode.com/users\";\nconst API_URL_COMMENTS = \"http://jsonplaceholder.typicode.com/comments\";\n\n//actions\nexport const handleSuccessPostlist = payload => ({\n  type: HANDLE_SUCCESS_POSTLIST,\n  payload\n});\n\nexport const handleSuccessUserlist = payload => ({\n  type: HANDLE_SUCCESS_USERLIST,\n  payload\n});\n\nexport const handleSuccessComments = payload => ({\n  type: HANDLE_SUCCESS_COMMENTS,\n  payload\n});\n\nexport const handleDeleteComment = payload => ({\n  type: HANDLE_DELETE_COMMENT,\n  payload\n});\n\nexport const handleEditComment = payload => {\n  return {\n    type: HANDLE_EDIT_COMMENT,\n    payload\n  };\n};\n\nexport const handleSuccessFacebook = ({ result }) => ({\n  type: HANDLE_SUCCESS_FACEBOOK,\n  payload: { result }\n});\n\nexport const handleSubmitRegister = ({ name, pass }) => ({\n  type: HANDLE_SUBMIT_REGISTER,\n  payload: { name, pass }\n});\n\nexport const handleSuccessContacts = payload => {\n  return {\n    type: HANDLE_SUCCESS_CONTACTS,\n    payload\n  };\n};\n\nexport const handleOpenUser = payload => {\n  return {\n    type: HANDLE_OPEN_USER,\n    payload\n  };\n};\n\nexport const preLoader = () => ({ type: PRELOADER });\n\n//functions\n\n// export const connectWithDB = a => async dispatch => {\n//   const { name, pass, confirmPass } = a;\n//   const response = await axios.post(name, pass, confirmPass).then(res => {});\n//   const result = response.json();\n//   dispatch(handleSubmitRegister({ name, pass, confirmPass }));\n// };\n\nexport const loadPostList = () => dispatch => {\n  axios.get(API_URL_POSTLIST).then(res => {\n    const result = res.data;\n    dispatch(handleSuccessPostlist({ result }));\n  });\n};\n\nexport const loadUserList = () => dispatch => {\n  axios.get(API_URL_USERLIST).then(res => {\n    const result = res.data;\n    dispatch(handleSuccessUserlist({ result }));\n  });\n};\n\nexport const loadCommentList = () => dispatch => {\n  axios.get(API_URL_COMMENTS).then(res => {\n    const result = res.data;\n    dispatch(handleSuccessComments({ result }));\n  });\n};\n\nexport const deleteComment = id => dispatch => {\n  const URL = `https://jsonplaceholder.typicode.com/comments/${id}`;\n  axios.delete(URL).then(res => {\n    console.log(res);\n  });\n  dispatch(handleDeleteComment(id));\n};\n\nexport const editComment = (values, id) => dispatch => {\n  const URL = `https://jsonplaceholder.typicode.com/comments/${id}`;\n  axios\n    .put(URL, {\n      name: values[0],\n      body: values[1],\n      id\n    })\n    .then(function(response) {\n      console.log(response);\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n  dispatch(handleEditComment({ values, id }));\n};\n\nexport const loadFacebookData = () => dispatch => {\n  axios.get(API_URL_INFO).then(res => {\n    const result = res.data.entries[0];\n    dispatch(handleSuccessFacebook({ result }));\n  });\n};\n\nexport const loadContactsData = () => async dispatch => {\n  axios.get(API_URL_CONTACTS).then(res => {\n    const result = res.data.results;\n    dispatch(handleSuccessContacts(result));\n  });\n};\n\nexport const onClickUser = user => dispatch => {\n  dispatch(handleOpenUser(user));\n};\n","import { ACTION_TYPES } from \"./actions\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst {\n  HANDLE_SUCCESS_FACEBOOK,\n  HANDLE_SUCCESS_CONTACTS,\n  //HANDLE_SUBMIT_REGISTER,\n  HANDLE_SUCCESS_POSTLIST,\n  HANDLE_SUCCESS_USERLIST,\n  HANDLE_SUCCESS_COMMENTS,\n  HANDLE_DELETE_COMMENT,\n  HANDLE_EDIT_COMMENT,\n  HANDLE_OPEN_USER,\n  PRELOADER\n} = ACTION_TYPES;\n\nexport const initialState = {\n  info: {\n    entries: [\n      {\n        API: \"\",\n        Auth: \"\",\n        Category: \"\",\n        Cors: \"\",\n        Description: \"\",\n        HTTPS: \"\",\n        Link: \"\"\n      }\n    ]\n  },\n  comment: {\n    name: null,\n    body: null,\n    id: null\n  },\n\n  user: null,\n  posts: [],\n  contacts: [],\n  isLoading: false,\n  userKeyFlag: false\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HANDLE_SUCCESS_FACEBOOK:\n      return {\n        ...state,\n        info: action.payload.result,\n        userKeyFlag: !!action.payload.userKey,\n        isLoading: false\n      };\n\n    case HANDLE_SUCCESS_POSTLIST:\n      return {\n        ...state,\n        posts: action.payload.result,\n        isLoading: false\n      };\n\n    case HANDLE_SUCCESS_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload.result,\n        isLoading: false\n      };\n\n    case HANDLE_DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(\n          comment => comment.id !== action.payload\n        )\n      };\n\n    case HANDLE_EDIT_COMMENT:\n      return {\n        ...state,\n        comment: {\n          name: action.payload.values.UserCommentTitle,\n          body: action.payload.values.UserCommentBody,\n          id: action.payload.id\n        }\n      };\n\n    case HANDLE_SUCCESS_USERLIST:\n      return {\n        ...state,\n        userList: action.payload.result,\n        isLoading: false\n      };\n\n    case HANDLE_SUCCESS_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        userKeyFlag: !!action.payload.userKey,\n        isLoading: false\n      };\n\n    case HANDLE_OPEN_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n\n    case PRELOADER:\n      return {\n        ...state,\n        isLoading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const createRootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    reducer,\n    form: formReducer\n  });\n","export function* helloSaga() {\n  yield 1;\n  console.log(\"Hello Sagas!\");\n}\n","import thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createRootReducer } from \"./reducer\";\n\nimport { helloSaga } from \"./sagas/sagas\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore() {\n  const store = createStore(\n    createRootReducer(history),\n    composeEnhancers(\n      applyMiddleware(routerMiddleware(history), thunk, sagaMiddleware)\n    )\n  );\n  sagaMiddleware.run(helloSaga);\n  return store;\n}\n","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\n//import { useDispatch } from \"react-redux\";\n//import { compose } from \"redux\";\n\n//import { connectWithDB } from \"../../store/actions.js\";\n\nconst Registration = ({ handleSubmit }) => {\n  //const dispatch = useDispatch();\n\n  // const handleSubmitA = a => {\n  //   console.log(compose);\n  //   dispatch(connectWithDB(a));\n  // };\n  return (\n    <div>\n      <h1>Register please</h1>\n      <form\n        className=\"form registration-form\"\n        //onSubmit={handleSubmit(handleSubmitA)}\n      >\n        <label className=\"label\" htmlFor=\"login\">\n          login:\n          <Field name=\"login\" component=\"input\" id=\"login\" type=\"text\" />\n        </label>\n        <label className=\"label\" htmlFor=\"password\">\n          password:\n          <Field\n            name=\"password\"\n            component=\"input\"\n            id=\"password\"\n            type=\"password\"\n          />\n        </label>\n        <label className=\"label\" htmlFor=\"confirm-password\">\n          confirm:\n          <Field\n            name=\"confirm-password\"\n            component=\"input\"\n            id=\"confirm-password\"\n            type=\"password\"\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default reduxForm({\n  form: \"registration\"\n})(Registration);\n","import React from \"react\";\n\nimport \"./Contact.scss\";\n\nconst Contact = ({ contact }) => {\n  return (\n    <div className=\"contact\">\n      <img\n        className=\"contact__img\"\n        src={contact.picture.medium}\n        alt=\"contact\"\n      />\n      <div className=\"contact__info\">\n        <p className=\"contact__registered\">\n          {contact.registered.date.slice(0, 10)}\n        </p>\n        <p className=\"contact__name\">\n          {contact.name.first + \"\" + contact.name.last}\n        </p>\n        <p className=\"contact__body\">{contact.location.city}</p>\n        <p className=\"contact__email\">{contact.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport './style.scss';\n\n\nconst PreLoader = () => {\n    return (<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>);\n}\n\nexport default PreLoader;","import React, { Component } from \"react\";\n\nimport Contact from \"../Contact/Contact\";\nimport PreLoader from \"../Preloader\";\nimport \"./Contacts.scss\";\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.preLoader();\n    this.props.loadContactsData();\n  }\n\n  render() {\n    const { isLoading, contacts } = this.props;\n\n    return isLoading ? (\n      <div>\n        <PreLoader />\n      </div>\n    ) : (\n      <div>\n        <div className=\"contacts-list\">\n          {contacts.map(contact => (\n            <Contact key={contact.cell} contact={contact} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n","import { connect } from 'react-redux';\n\nimport Contacts from './Contacts';\nimport { loadContactsData, preLoader } from '../../store/actions';\n\nconst mapStateToProps = state => {\n    return {\n        userKeyFlag: state.reducer.userKeyFlag,\n        contacts: state.reducer.contacts,\n        isLoading: state.reducer.isLoading,\n    };\n}\n\nconst mapDispatchToProps = {\n    loadContactsData,\n    preLoader,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Contacts);","import React, { Component, Fragment } from \"react\";\n\nimport PreLoader from \"../Preloader\";\nimport \"./HomePage.scss\";\n\nconst ApiFields = [\n  \"API\",\n  \"Auth\",\n  \"Category\",\n  \"Cors\",\n  \"Description\",\n  \"HTTPS\",\n  \"Link\"\n];\n\nclass HomePage extends Component {\n  componentDidMount() {\n    const { loadFacebookData, preLoader } = this.props;\n    preLoader();\n    loadFacebookData();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"home-page\">\n          {!this.props.isLoading ? (\n            <div className=\"api\">\n              {ApiFields.map(field => (\n                <Fragment key={field}>\n                  <p>{field}</p>\n                  <p>{this.props.info[field]}</p>\n                </Fragment>\n              ))}\n            </div>\n          ) : (\n            <PreLoader />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { connect } from 'react-redux';\n\nimport HomePage from './HomePage';\nimport { loadFacebookData, preLoader } from '../../store/actions';\n\nconst mapStateToProps = ({ reducer }) => {\n    return {\n        userKeyFlag: reducer.userKeyFlag,\n        info: reducer.info,\n        isLoading: reducer.isLoading,\n    };\n}\n\nconst mapDispatchToProps = {\n    loadFacebookData,\n    preLoader,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage);","import React from \"react\";\nimport \"./Profile.scss\";\n\nconst Profile = () => {\n  const data = JSON.parse(localStorage.getItem(\"userData\"));\n  if (data.results) {\n    const { name, picture, location, email, login } = data.results[0];\n\n    if (data.results) {\n      const { name, picture, location, email, login } = data.results[0];\n      return (\n        <>\n          <h1>Profile</h1>\n          <div className=\"user\">\n            <img className=\"user__image\" src={picture.large} alt=\"user\" />\n            <div className=\"user__info\">\n              <div className=\"user__label\">Name:</div>\n              <div className=\"user__name\">\n                {name.title + \" \" + name.first + \" \" + name.last}\n              </div>\n              <div className=\"user__label\">Nick:</div>\n              <div className=\"user__username\">{login.username}</div>\n              <div className=\"user__label\">Country:</div>\n              <div className=\"user__country\">{location.country}</div>\n              <div className=\"user__label\">City:</div>\n\n              <div className=\"user__name\">{location.city}</div>\n              <div className=\"user__label\">Email:</div>\n              <div className=\"user__email\">{email}</div>\n            </div>\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <div>\n        <h1>Profile</h1>\n        <div></div>\n      </div>\n    );\n  }\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { src: null };\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n  handleLogOut() {\n    localStorage.clear();\n    this.props.history.push(\"/autorise\");\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"nav\">\n          <NavLink className=\"nav-link\" to=\"/\">\n            Главная\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/contacts\">\n            Контакты\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/profile\">\n            Профиль\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/posts\">\n            Посты\n          </NavLink>\n        </nav>\n        <button\n          type=\"button\"\n          className=\"logout\"\n          onClick={this.handleLogOut}\n        ></button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Nav);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Form.scss\";\n\nconst API_URL = \"https://randomuser.me/api/\";\n\nclass Form extends React.Component {\n  state = {\n    handleSubmitResult: 0,\n    loginValue: \"\",\n    passwordValue: \"\"\n  };\n\n  handleSubmitFacebook = async () => {\n    try {\n      const response = await fetch(API_URL);\n      const userData = await response.json();\n      const userKey = userData.results[0].login.sha256;\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n      localStorage.setItem(\"userKey\", JSON.stringify(userKey));\n      this.props.history.push(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  handleRegistration = () => {\n    this.props.history.push(\"/register\");\n  };\n\n  render() {\n    const { handleSubmitResult, loginValue, passwordValue } = this.state;\n\n    return (\n      <>\n        <h1>Login please</h1>\n        <form className=\"form\">\n          <label className=\"label\" htmlFor=\"login\">\n            login:\n            <input\n              value={loginValue}\n              onChange={event => {\n                this.setState({ loginValue: event.target.value });\n              }}\n              id=\"login\"\n              type=\"text\"\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"password\">\n            password:\n            <input\n              value={passwordValue}\n              onChange={event => {\n                this.setState({ passwordValue: event.target.value });\n              }}\n              id=\"password\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            className=\"button\"\n            type=\"submit\"\n            onClick={this.handleRegistration}\n          >\n            Register\n          </button>\n          <button className=\"button\" type=\"submit\">\n            Login\n          </button>\n          <button\n            className=\"login-facebook\"\n            type=\"button\"\n            onClick={this.handleSubmitFacebook}\n          ></button>\n        </form>\n        {handleSubmitResult === 1 && (\n          <p className=\"error\">The data is entered incorrectly.</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Form);\n","import React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest}) => {\n    return (\n        <Route\n            {...rest} \n            render={props => {\n                if (window.localStorage.getItem('userKey')) {\n                    return (\n                        <Component {...props} />\n                    );\n                }\n\n                return (\n                    <Redirect to=\"/autorise\" />\n                )\n                    }}\n        />\n    );\n};\n\nexport default withRouter(ProtectedRoute);","import React, { useEffect } from \"react\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport Button from \"@material-ui/core/Button\";\n\nconst brownBack = brown[\"50\"];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    justifyContent: \"space-evenly\",\n    maxWidth: \"1200px\",\n    margin: \"auto\",\n    padding: \"2% 0 0\"\n  },\n  paper: {\n    width: 400\n  },\n  box: {\n    backgroundColor: brownBack,\n    marginTop: 1,\n    padding: \"10px 0\",\n    width: 370,\n    margin: \"auto\",\n    borderRadius: 5\n  },\n  box_son: {\n    padding: \"3px 10px\",\n    textAlign: \"left\",\n    fontSize: 12\n  },\n  box_son2: {\n    padding: \"0 10px\",\n    textAlign: \"left\",\n    fontSize: 12\n  },\n  buttonLookPosts: {\n    margin: 10,\n    fontSize: 10,\n    color: \"#9b8c8d\",\n    position: \"reletive\",\n    right: -263,\n    boxShadow: \"none\"\n  },\n  control: {\n    padding: theme.spacing(1)\n  }\n}));\n\nexport const ContactCard = props => {\n  const { user } = props;\n  const [spacing] = React.useState(2);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.box} justify=\"center\" spacing={0}>\n      <img\n        style={{\n          border: \"1px solid #dababa\",\n          borderRadius: \"5px\",\n          height: \"107px\"\n        }}\n        src={user.img}\n        alt=\"contact\"\n      />\n      <Box className={classes.box_son2}>\n        <Box className={classes.box_son}>Name: {user.name}</Box>\n        <Box className={classes.box_son}>Nickname: {user.username}</Box>\n\n        <Box className={classes.box_son}>Email: {user.email}</Box>\n\n        <Box className={classes.box_son}>\n          City:{user.address.city}\n          <br />\n          <a\n            style={{ paddingTop: \"5px\", display: \"block\" }}\n            href={\"http://\" + user.website}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Website\n          </a>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { ContactCard } from \"../ContactCard\";\nimport PreLoader from \"../Preloader\";\nimport \"./User.scss\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    justifyContent: \"space-evenly\",\n    maxWidth: \"1200px\",\n    margin: \"auto\",\n    padding: \"2% 0 0\"\n  },\n  paper: {\n    width: 400\n  },\n  buttonLookPosts: {\n    margin: 10,\n    fontSize: 10,\n    color: \"#9b8c8d\",\n    position: \"reletive\",\n    right: -263,\n    boxShadow: \"none\"\n  },\n  control: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst User = props => {\n  const {\n    preLoader,\n    loadPostList,\n    loadUserList,\n    loadContactsData,\n    loadCommentList,\n    contacts,\n    userList\n  } = props;\n\n  useEffect(() => {\n    preLoader();\n    loadPostList();\n    loadUserList();\n    loadContactsData();\n    loadCommentList();\n  }, []);\n\n  const openUserPosts = user => {\n    props.onClickUser(user);\n    props.history.push(\"/user\");\n  };\n\n  const [spacing] = React.useState(2);\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container justify=\"center\" spacing={spacing}>\n      {userList &&\n        userList.map((user, userIndex) => {\n          const userWithImage =\n            contacts && contacts.find((contact, index) => index === userIndex);\n\n          const userData = {\n            ...user,\n            img: userWithImage && userWithImage.picture.large\n          };\n\n          return (\n            <Grid key={userIndex} item>\n              <Paper className={classes.paper}>\n                <Box>\n                  <div className=\"user-id\">\n                    <Box component=\"span\">{user.id}</Box>\n                    {user.username}\n                  </div>\n                  <ContactCard user={userData} />\n                </Box>\n\n                <Button\n                  className={classes.buttonLookPosts}\n                  onClick={() => openUserPosts(userData)}\n                  variant=\"contained\"\n                >\n                  <VisibilityIcon />\n                  Look posts\n                </Button>\n              </Paper>\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n};\n\nexport default withRouter(User);\n","import { connect } from \"react-redux\";\n\nimport User from \"./User\";\nimport {\n  loadPostList,\n  loadUserList,\n  loadContactsData,\n  onClickUser,\n  loadCommentList,\n  preLoader\n} from \"../../store/actions\";\n\nconst mapStateToProps = ({ reducer }) => {\n  return {\n    posts: reducer.posts,\n    userList: reducer.userList,\n    isLoading: reducer.isLoading,\n    contacts: reducer.contacts,\n    comments: reducer.comments\n  };\n};\n\nconst mapDispatchToProps = {\n  loadPostList,\n  loadUserList,\n  loadCommentList,\n  onClickUser,\n  loadContactsData,\n  preLoader\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","import React from \"react\";\nimport { Field, Form, reduxForm } from \"redux-form\";\n\nimport \"./AddCommentForm.scss\";\n\nconst AddCommentForm = ({ handleSubmit }) => {\n  return (\n    <>\n      <h2>Add comment</h2>\n      <Form onSubmit={handleSubmit} className=\"form add-comment\">\n        <label className=\"label\" htmlFor=\"title\">\n          Title:\n          <Field\n            className=\"add-comment__textarea\"\n            name=\"title\"\n            component=\"textarea\"\n            type=\"text\"\n          />\n        </label>\n        <label className=\"label\" htmlFor=\"body\">\n          Body:\n          <Field\n            className=\"add-comment__textarea\"\n            name=\"body\"\n            component=\"textarea\"\n            type=\"text\"\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          отправить\n        </button>\n      </Form>\n    </>\n  );\n};\n\nexport default reduxForm({\n  form: \"AddComment\"\n})(AddCommentForm);\n","import React from \"react\";\nimport { Field, Form, reduxForm } from \"redux-form\";\n\nimport \"./index.scss\";\n\nconst EditCommentForm = ({ handleSubmit }) => (\n  <Form onSubmit={handleSubmit}>\n    <Field\n      className=\"edit-comment\"\n      name=\"UserCommentTitle\"\n      component=\"textarea\"\n    />\n    <Field\n      className=\"edit-comment\"\n      name=\"UserCommentBody\"\n      component=\"textarea\"\n    />\n    <button type=\"submit\">Save</button>\n  </Form>\n);\n\nexport default reduxForm({\n  form: \"comment\"\n})(EditCommentForm);\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport AddCommentForm from \"../AddCommentForm/AddCommentForm\";\nimport EditCommentForm from \"../EditCommentForm\";\nimport \"./index.scss\";\n\nconst grayBack = grey[\"600\"];\nconst brownColor = brown[\"600\"];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    position: \"relative\",\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    width: \"90%\",\n    margin: \"10px auto 30px\",\n    padding: \"20px 10px 30px\",\n    borderRadius: 10\n  },\n  grid: {\n    //backgroundColor: grayBack,\n    marginTop: 10,\n    borderRadius: 10\n  },\n  comment: {\n    padding: 20,\n    margin: 20,\n    borderRadius: 50\n  },\n  typography: {\n    fontFamily: \"Gloria Hallelujah\",\n    color: grayBack\n  },\n  title: {\n    fontFamily: \"unset\",\n    color: grayBack,\n    width: \" 80%\",\n    margin: \"auto\"\n  }\n}));\n\nexport const UserPosts = props => {\n  const {\n    posts,\n    comments,\n    currentUser,\n    deleteComment,\n    editComment,\n    stateComment\n  } = props;\n  let [isEditing, setEdit] = useState(null);\n  const classes = useStyles();\n\n  const handleDeleteComment = id => {\n    deleteComment(id);\n  };\n\n  const handleSaveEditedComment = (values, id) => {\n    editComment(values, id);\n  };\n\n  const findPosts = () => {\n    if (posts) {\n      return posts.filter(post => {\n        return post.userId === currentUser;\n      });\n    }\n  };\n\n  const postsArray = findPosts();\n\n  const handleSubmitEdit = (values, id) => {\n    setEdit((isEditing = null));\n    handleSaveEditedComment(values, id);\n  };\n\n  return (\n    <Grid bgcolor=\"#efebe9\" className={classes.grid} item xs={12}>\n      {postsArray.map((post, postIndex) => {\n        const com = comments.filter(comment => comment.postId === post.id);\n        const postTitle = post.title[0].toUpperCase() + post.title.slice(1);\n        const postBody = post.body[0].toUpperCase() + post.body.slice(1);\n        return (\n          <Paper className={classes.paper} key={post.id}>\n            <b className=\"post-id\">{postIndex + 1}</b>\n            <Typography\n              paragraph={true}\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"p\"\n              variant=\"h6\"\n              className={classes.title}\n            >\n              {postTitle}\n            </Typography>\n            <Typography\n              paragraph={true}\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.title}\n            >\n              {postBody}\n            </Typography>\n\n            <Box bgcolor=\"#f5f5f5\" className={classes.paper}>\n              <Typography className={classes.title} component=\"h5\" variant=\"h5\">\n                Comments:\n              </Typography>\n              {com.map((comment, index) => {\n                const id = comment.id;\n\n                const commentName =\n                  comment.name[0].toUpperCase() + comment.name.slice(1);\n                const commentBody =\n                  comment.body[0].toUpperCase() + comment.body.slice(1);\n\n                const editedCommentName =\n                  stateComment.name && stateComment.name;\n                const editedCommentBody =\n                  stateComment.body && stateComment.body;\n                const editedCommentId = stateComment.id && stateComment.id;\n\n                return (\n                  <Box\n                    boxShadow={3}\n                    className={classes.comment}\n                    bgcolor=\"white\"\n                    key={comment.id}\n                  >\n                    {isEditing !== index + 1 ? (\n                      <>\n                        <b>{index + 1}</b>\n                        <Box\n                          className={classes.typography}\n                          align=\"left\"\n                          color=\"textSecondary\"\n                        >\n                          {editedCommentId === id && editedCommentName\n                            ? editedCommentName\n                            : commentName}\n                          <hr />\n                          {editedCommentId === id && editedCommentBody\n                            ? editedCommentBody\n                            : commentBody}\n                        </Box>\n\n                        <Box className=\"flex-wrapper\">\n                          <IconButton\n                            aria-label=\"delete\"\n                            onClick={() => handleDeleteComment(id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                          <Fab\n                            onClick={() => setEdit((isEditing = index + 1))}\n                            size=\"small\"\n                            aria-label=\"edit\"\n                          >\n                            <EditIcon />\n                          </Fab>\n                        </Box>\n                      </>\n                    ) : (\n                      <>\n                        <EditCommentForm\n                          onSubmit={values => handleSubmitEdit(values, id)}\n                          initialValues={{\n                            UserCommentTitle: editedCommentName || comment.name,\n                            UserCommentBody: editedCommentBody || comment.body\n                          }}\n                        />\n                        <Box className=\"flex-wrapper\">\n                          <Fab\n                            style={{ margin: \"20px\" }}\n                            onClick={() => setEdit(null)}\n                            color=\"default\"\n                            size=\"small\"\n                            aria-label=\"edit\"\n                          >\n                            <CloseIcon />\n                          </Fab>\n                        </Box>\n                      </>\n                    )}\n                  </Box>\n                );\n              })}\n              <AddCommentForm />\n            </Box>\n          </Paper>\n        );\n      })}\n    </Grid>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { UserPosts } from \"./UserPosts\";\nimport { deleteComment, editComment } from \"../../store/actions\";\n\nconst mapStateToProps = ({ reducer }) => {\n  return {\n    stateComment: reducer.comment\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withRouter } from \"react-router\";\nimport UserPosts from \"../../UserPosts\";\nimport { ContactCard } from \"../../ContactCard\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./UserInfo.scss\";\n\nconst brownBack = brown[\"50\"];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(5),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  title: {\n    fontFamily: \"unset\",\n    marginTop: 10\n  }\n}));\n\nfunction UserInfo(props) {\n  const { user, posts, comments } = props;\n  const classes = useStyles();\n\n  const redirectToPosts = () => {\n    props.history.push(\"/posts\");\n  };\n\n  return user ? (\n    <div className={classes.root}>\n      <Typography\n        color=\"textSecondary\"\n        align=\"center\"\n        component=\"p\"\n        variant=\"h5\"\n        className={classes.title}\n      >\n        {user.username}\n      </Typography>\n      <Grid\n        className=\"current-card\"\n        border={1}\n        container={true}\n        alignContent=\"stretch\"\n        spacing={1}\n        justify=\"center\"\n      >\n        <ContactCard user={user} />\n        <UserPosts posts={posts} comments={comments} currentUser={user.id} />\n      </Grid>\n    </div>\n  ) : (\n    <div>{redirectToPosts()}</div>\n  );\n}\n\nexport default withRouter(UserInfo);\n","import { connect } from \"react-redux\";\n\nimport UserInfo from \"./UserInfo\";\n\nconst mapStateToProps = ({ reducer }) => {\n  return {\n    user: reducer.user,\n    posts: reducer.posts,\n    userList: reducer.userList,\n    isLoading: reducer.isLoading,\n    contacts: reducer.contacts,\n    comments: reducer.comments\n  };\n};\n\nexport default connect(mapStateToProps)(UserInfo);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Registration from \"./components/Registration\";\nimport Contacts from \"./components/Contacts\";\nimport HomePage from \"./components/HomePage\";\nimport Profile from \"./components/Profile/Profile\";\nimport Nav from \"./components/Nav/Nav\";\nimport Form from \"./components/Form/Form\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport \"./App.scss\";\nimport User from \"./components/User\";\nimport UserInfo from \"./components/User/UserInfo\";\nimport \"normalize.css\";\n\nconst App = () => (\n  <Switch>\n    <Route path=\"/autorise\" component={Form} />\n    <Route path=\"/register\" component={Registration} />\n    <>\n      <Nav />\n      <Switch>\n        <Route path=\"/user\" component={UserInfo} />\n        <Route path=\"/posts\" component={User} />\n        <ProtectedRoute exact path=\"/\" component={HomePage} />\n        <ProtectedRoute path=\"/contacts\" component={Contacts} />\n        <ProtectedRoute path=\"/profile\" component={Profile} />\n      </Switch>\n    </>\n  </Switch>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/store';\nimport App from './App';\n\nconst history = createBrowserHistory();\n\nReactDOM.render((\n  <Provider store={configureStore()}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}