{"version":3,"sources":["store/actions.js","store/reducer.js","store/sagas/api_info.js","store/sagas/index.js","store/store.js","components/Registration/index.js","components/Contact/Contact.js","components/Preloader/index.js","components/Contacts/Contacts.js","components/Contacts/index.js","components/HomePage/HomePage.js","components/HomePage/index.js","components/Profile/Profile.js","components/Nav/Nav.js","components/Form/Form.js","components/ProtectedRoute/index.js","components/ContactCard/index.js","components/User/User.js","components/User/index.js","components/AddCommentForm/AddCommentForm.js","components/EditCommentForm/index.js","components/UserPosts/UserPosts.js","components/UserPosts/index.js","components/User/UserInfo/UserInfo.js","components/User/UserInfo/index.js","App.js","index.js"],"names":["ACTION_TYPES","HANDLE_SUCCESS_FACEBOOK","HANDLE_SUCCESS_CONTACTS","HANDLE_SUCCESS_POSTLIST","HANDLE_SUCCESS_USERLIST","HANDLE_SUCCESS_COMMENTS","HANDLE_DELETE_COMMENT","HANDLE_EDIT_COMMENT","HANDLE_OPEN_USER","PRELOADER","preLoader","type","loadContactsData","dispatch","a","async","axios","get","then","res","result","data","results","payload","initialState","info","entries","API","Auth","Category","Cors","Description","HTTPS","Link","comment","name","body","id","user","posts","contacts","isLoading","userKeyFlag","reducer","state","action","console","log","userKey","comments","filter","values","UserCommentTitle","UserCommentBody","userList","createRootReducer","history","combineReducers","router","connectRouter","form","formReducer","helloSaga","rootSaga","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","sagaMiddleware","createSagaMiddleware","reduxForm","handleSubmit","className","htmlFor","Field","component","Contact","contact","src","picture","medium","alt","registered","date","slice","first","last","location","city","email","PreLoader","Contacts","props","this","map","key","cell","Component","mapDispatchToProps","connect","ApiFields","HomePage","field","loadFacebookData","handleSuccessFacebook","Profile","JSON","parse","localStorage","getItem","login","large","title","username","country","Nav","handleLogOut","bind","clear","push","to","onClick","React","withRouter","API_URL","Form","handleSubmitResult","loginValue","passwordValue","handleSubmitFacebook","fetch","response","json","userData","sha256","setItem","stringify","handleRegistration","value","onChange","event","setState","target","rest","render","brownBack","brown","useStyles","makeStyles","theme","root","justifyContent","maxWidth","margin","padding","paper","width","box","backgroundColor","marginTop","borderRadius","box_son","textAlign","fontSize","box_son2","buttonLookPosts","color","position","right","boxShadow","control","spacing","ContactCard","useState","classes","Grid","container","justify","style","border","height","img","Box","address","paddingTop","display","href","website","rel","loadPostList","loadUserList","loadCommentList","useEffect","userIndex","userWithImage","find","index","item","Paper","Button","onClickUser","openUserPosts","variant","User","onSubmit","grayBack","grey","flexGrow","palette","text","secondary","grid","typography","fontFamily","deleteComment","URL","delete","editComment","put","catch","error","stateComment","currentUser","isEditing","setEdit","postsArray","post","userId","findPosts","handleSubmitEdit","handleSaveEditedComment","bgcolor","xs","postIndex","com","postId","postTitle","toUpperCase","postBody","Typography","paragraph","align","commentName","commentBody","editedCommentName","editedCommentBody","editedCommentId","IconButton","aria-label","handleDeleteComment","Fab","size","initialValues","alignContent","UserInfo","App","path","Registration","exact","ReactDOM","store","createStore","applyMiddleware","routerMiddleware","thunk","run","configureStore","document","getElementById"],"mappings":"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","file":"static/js/main.c2d9e20a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ACTION_TYPES = {\r\n  LOGIN: \"LOGIN\",\r\n  PRELOADER: \"PRELOADER\",\r\n  HANDLE_SUCCESS_CONTACTS: \"HANDLE_SUCCESS_CONTACTS\",\r\n  HANDLE_SUCCESS_FACEBOOK: \"HANDLE_SUCCESS_FACEBOOK\",\r\n  HANDLE_SUCCESS_POSTLIST: \"HANDLE_SUCCESS_POSTLIST\",\r\n  HANDLE_SUCCESS_USERLIST: \"HANDLE_SUCCESS_USERLIST\",\r\n  HANDLE_SUBMIT_REGISTER: \"HANDLE_SUBMIT_REGISTER\",\r\n  HANDLE_SUCCESS_COMMENTS: \"HANDLE_SUCCESS_COMMENTS\",\r\n  HANDLE_OPEN_USER: \"HANDLE_OPEN_USER\",\r\n  HANDLE_DELETE_COMMENT: \"HANDLE_DELETE_COMMENT\",\r\n  HANDLE_EDIT_COMMENT: \"HANDLE_EDIT_COMMENT\"\r\n};\r\n\r\nconst {\r\n  HANDLE_SUCCESS_FACEBOOK,\r\n  HANDLE_SUCCESS_CONTACTS,\r\n  HANDLE_SUBMIT_REGISTER,\r\n  HANDLE_SUCCESS_POSTLIST,\r\n  HANDLE_SUCCESS_USERLIST,\r\n  HANDLE_SUCCESS_COMMENTS,\r\n  HANDLE_DELETE_COMMENT,\r\n  HANDLE_EDIT_COMMENT,\r\n  HANDLE_OPEN_USER,\r\n  PRELOADER\r\n} = ACTION_TYPES;\r\n\r\nconst API_URL_INFO = \"https://api.publicapis.org/random\";\r\nconst API_URL_CONTACTS =\r\n  \"https://randomuser.me/api/?page=1&results=10&seed=abc\";\r\nconst API_URL_POSTLIST = \"http://jsonplaceholder.typicode.com/posts\";\r\nconst API_URL_USERLIST = \"http://jsonplaceholder.typicode.com/users\";\r\nconst API_URL_COMMENTS = \"http://jsonplaceholder.typicode.com/comments\";\r\n\r\n//actions\r\nexport const handleSuccessPostlist = payload => ({\r\n  type: HANDLE_SUCCESS_POSTLIST,\r\n  payload\r\n});\r\n\r\nexport const handleSuccessUserlist = payload => ({\r\n  type: HANDLE_SUCCESS_USERLIST,\r\n  payload\r\n});\r\n\r\nexport const handleSuccessComments = payload => ({\r\n  type: HANDLE_SUCCESS_COMMENTS,\r\n  payload\r\n});\r\n\r\nexport const handleDeleteComment = payload => ({\r\n  type: HANDLE_DELETE_COMMENT,\r\n  payload\r\n});\r\n\r\nexport const handleEditComment = payload => {\r\n  return {\r\n    type: HANDLE_EDIT_COMMENT,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const handleSuccessFacebook = ({ result }) => ({\r\n  type: HANDLE_SUCCESS_FACEBOOK,\r\n  payload: { result }\r\n});\r\n\r\nexport const handleSubmitRegister = ({ name, pass }) => ({\r\n  type: HANDLE_SUBMIT_REGISTER,\r\n  payload: { name, pass }\r\n});\r\n\r\nexport const handleSuccessContacts = payload => {\r\n  return {\r\n    type: HANDLE_SUCCESS_CONTACTS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const handleOpenUser = payload => {\r\n  return {\r\n    type: HANDLE_OPEN_USER,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const preLoader = () => ({ type: PRELOADER });\r\n\r\n//functions\r\n\r\n// export const connectWithDB = a => async dispatch => {\r\n//   const { name, pass, confirmPass } = a;\r\n//   const response = await axios.post(name, pass, confirmPass).then(res => {});\r\n//   const result = response.json();\r\n//   dispatch(handleSubmitRegister({ name, pass, confirmPass }));\r\n// };\r\n\r\nexport const loadPostList = () => dispatch => {\r\n  axios.get(API_URL_POSTLIST).then(res => {\r\n    const result = res.data;\r\n    dispatch(handleSuccessPostlist({ result }));\r\n  });\r\n};\r\n\r\nexport const loadUserList = () => dispatch => {\r\n  axios.get(API_URL_USERLIST).then(res => {\r\n    const result = res.data;\r\n    dispatch(handleSuccessUserlist({ result }));\r\n  });\r\n};\r\n\r\nexport const loadCommentList = () => dispatch => {\r\n  axios.get(API_URL_COMMENTS).then(res => {\r\n    const result = res.data;\r\n    dispatch(handleSuccessComments({ result }));\r\n  });\r\n};\r\n\r\nexport const deleteComment = id => dispatch => {\r\n  const URL = `https://jsonplaceholder.typicode.com/comments/${id}`;\r\n  axios.delete(URL).then(res => {\r\n    console.log(res);\r\n  });\r\n  dispatch(handleDeleteComment(id));\r\n};\r\n\r\nexport const editComment = (values, id) => dispatch => {\r\n  const URL = `https://jsonplaceholder.typicode.com/comments/${id}`;\r\n  axios\r\n    .put(URL, {\r\n      name: values[0],\r\n      body: values[1],\r\n      id\r\n    })\r\n    .then(function(response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  dispatch(handleEditComment({ values, id }));\r\n};\r\n\r\nexport const loadFacebookData = () => dispatch => {\r\n  axios.get(API_URL_INFO).then(res => {\r\n    const result = res.data.entries[0];\r\n    dispatch(handleSuccessFacebook({ result }));\r\n  });\r\n};\r\n\r\nexport const loadContactsData = () => async dispatch => {\r\n  axios.get(API_URL_CONTACTS).then(res => {\r\n    const result = res.data.results;\r\n    dispatch(handleSuccessContacts(result));\r\n  });\r\n};\r\n\r\nexport const onClickUser = user => dispatch => {\r\n  dispatch(handleOpenUser(user));\r\n};\r\n","import { ACTION_TYPES } from \"./actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst {\r\n  HANDLE_SUCCESS_FACEBOOK,\r\n  HANDLE_SUCCESS_CONTACTS,\r\n  //HANDLE_SUBMIT_REGISTER,\r\n  HANDLE_SUCCESS_POSTLIST,\r\n  HANDLE_SUCCESS_USERLIST,\r\n  HANDLE_SUCCESS_COMMENTS,\r\n  HANDLE_DELETE_COMMENT,\r\n  HANDLE_EDIT_COMMENT,\r\n  HANDLE_OPEN_USER,\r\n  PRELOADER\r\n} = ACTION_TYPES;\r\n\r\nexport const initialState = {\r\n  info: {\r\n    entries: [\r\n      {\r\n        API: \"\",\r\n        Auth: \"\",\r\n        Category: \"\",\r\n        Cors: \"\",\r\n        Description: \"\",\r\n        HTTPS: \"\",\r\n        Link: \"\"\r\n      }\r\n    ]\r\n  },\r\n  comment: {\r\n    name: null,\r\n    body: null,\r\n    id: null\r\n  },\r\n\r\n  user: null,\r\n  posts: [],\r\n  contacts: [],\r\n  isLoading: false,\r\n  userKeyFlag: false\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HANDLE_SUCCESS_FACEBOOK:\r\n      console.log(action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        info: action.payload.result,\r\n        userKeyFlag: !!action.payload.userKey,\r\n        isLoading: false\r\n      };\r\n\r\n    case HANDLE_SUCCESS_POSTLIST:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.result,\r\n        isLoading: false\r\n      };\r\n\r\n    case HANDLE_SUCCESS_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload.result,\r\n        isLoading: false\r\n      };\r\n\r\n    case HANDLE_DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: state.comments.filter(\r\n          comment => comment.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case HANDLE_EDIT_COMMENT:\r\n      return {\r\n        ...state,\r\n        comment: {\r\n          name: action.payload.values.UserCommentTitle,\r\n          body: action.payload.values.UserCommentBody,\r\n          id: action.payload.id\r\n        }\r\n      };\r\n\r\n    case HANDLE_SUCCESS_USERLIST:\r\n      return {\r\n        ...state,\r\n        userList: action.payload.result,\r\n        isLoading: false\r\n      };\r\n\r\n    case HANDLE_SUCCESS_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        userKeyFlag: !!action.payload.userKey,\r\n        isLoading: false\r\n      };\r\n\r\n    case HANDLE_OPEN_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n\r\n    case PRELOADER:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRootReducer = history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    reducer,\r\n    form: formReducer\r\n  });\r\n","import { call, all, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport { axios } from \"axios\";\r\nconst API_URL_INFO = \"https://api.publicapis.org/random\";\r\n\r\nfunction* loadFacebookData() {\r\n  const api_info = yield axios.get(API_URL_INFO).then(res => {\r\n    const result = res.data.entries[0];\r\n    return result;\r\n  });\r\n\r\n  yield put({ type: \"HANDLE_SUCCESS_FACEBOOK\", api_info });\r\n}\r\n\r\n// function* actionWatcher() {\r\n//   yield facebookData(\"GET_NEWS\", fetchNews);\r\n// }\r\n\r\nexport const helloSaga = function* helloSaga() {\r\n  console.log(\"Hello Sagas!\");\r\n};\r\n\r\n// export default mySaga;\r\n","import { helloSaga } from \"./api_info\";\r\nimport { call, all, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([helloSaga()]);\r\n}\r\n","import thunk from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createRootReducer } from \"./reducer\";\r\n\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const history = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    composeEnhancers(\r\n      applyMiddleware(routerMiddleware(history), thunk, sagaMiddleware)\r\n    )\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import { compose } from \"redux\";\r\n\r\n//import { connectWithDB } from \"../../store/actions.js\";\r\n\r\nconst Registration = ({ handleSubmit }) => {\r\n  //const dispatch = useDispatch();\r\n\r\n  // const handleSubmitA = a => {\r\n  //   console.log(compose);\r\n  //   dispatch(connectWithDB(a));\r\n  // };\r\n  return (\r\n    <div>\r\n      <h1>Register please</h1>\r\n      <form\r\n        className=\"form registration-form\"\r\n        //onSubmit={handleSubmit(handleSubmitA)}\r\n      >\r\n        <label className=\"label\" htmlFor=\"login\">\r\n          login:\r\n          <Field name=\"login\" component=\"input\" id=\"login\" type=\"text\" />\r\n        </label>\r\n        <label className=\"label\" htmlFor=\"password\">\r\n          password:\r\n          <Field\r\n            name=\"password\"\r\n            component=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n          />\r\n        </label>\r\n        <label className=\"label\" htmlFor=\"confirm-password\">\r\n          confirm:\r\n          <Field\r\n            name=\"confirm-password\"\r\n            component=\"input\"\r\n            id=\"confirm-password\"\r\n            type=\"password\"\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"registration\"\r\n})(Registration);\r\n","import React from \"react\";\r\n\r\nimport \"./Contact.scss\";\r\n\r\nconst Contact = ({ contact }) => {\r\n  return (\r\n    <div className=\"contact\">\r\n      <img\r\n        className=\"contact__img\"\r\n        src={contact.picture.medium}\r\n        alt=\"contact\"\r\n      />\r\n      <div className=\"contact__info\">\r\n        <p className=\"contact__registered\">\r\n          {contact.registered.date.slice(0, 10)}\r\n        </p>\r\n        <p className=\"contact__name\">\r\n          {contact.name.first + \"\" + contact.name.last}\r\n        </p>\r\n        <p className=\"contact__body\">{contact.location.city}</p>\r\n        <p className=\"contact__email\">{contact.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\n\r\nconst PreLoader = () => {\r\n    return (<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>);\r\n}\r\n\r\nexport default PreLoader;","import React, { Component } from \"react\";\r\n\r\nimport Contact from \"../Contact/Contact\";\r\nimport PreLoader from \"../Preloader\";\r\nimport \"./Contacts.scss\";\r\n\r\nclass Contacts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.preLoader();\r\n    this.props.loadContactsData();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, contacts } = this.props;\r\n\r\n    return isLoading ? (\r\n      <div>\r\n        <PreLoader />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <div className=\"contacts-list\">\r\n          {contacts.map(contact => (\r\n            <Contact key={contact.cell} contact={contact} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Contacts from './Contacts';\r\nimport { loadContactsData, preLoader } from '../../store/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userKeyFlag: state.reducer.userKeyFlag,\r\n        contacts: state.reducer.contacts,\r\n        isLoading: state.reducer.isLoading,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContactsData,\r\n    preLoader,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Contacts);","import React, { Component, Fragment } from \"react\";\r\n\r\nimport PreLoader from \"../Preloader\";\r\nimport \"./HomePage.scss\";\r\n\r\nconst ApiFields = [\r\n  \"API\",\r\n  \"Auth\",\r\n  \"Category\",\r\n  \"Cors\",\r\n  \"Description\",\r\n  \"HTTPS\",\r\n  \"Link\"\r\n];\r\n\r\nclass HomePage extends Component {\r\n  componentDidMount() {\r\n    const { preLoader } = this.props;\r\n    preLoader();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"home-page\">\r\n          {!this.props.isLoading ? (\r\n            <div className=\"api\">\r\n              {ApiFields.map(field => (\r\n                <Fragment key={field}>\r\n                  <p>{field}</p>\r\n                  <p>{this.props.info[field]}</p>\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <PreLoader />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import { connect } from 'react-redux';\r\n\r\nimport HomePage from './HomePage';\r\nimport { loadFacebookData, preLoader } from '../../store/actions';\r\n\r\nconst mapStateToProps = ({ reducer }) => {\r\n    return {\r\n        userKeyFlag: reducer.userKeyFlag,\r\n        info: reducer.info,\r\n        isLoading: reducer.isLoading,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadFacebookData,\r\n    preLoader,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);","import React from \"react\";\r\nimport \"./Profile.scss\";\r\n\r\nconst Profile = () => {\r\n  const data = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n  if (data.results) {\r\n    const { name, picture, location, email, login } = data.results[0];\r\n    return (\r\n      <>\r\n        <h1>Profile</h1>\r\n        <div className=\"user\">\r\n          <img className=\"user__image\" src={picture.large} alt=\"user\" />\r\n          <div className=\"user__info\">\r\n            <div className=\"user__label\">Name:</div>\r\n            <div className=\"user__name\">\r\n              {name.title + \" \" + name.first + \" \" + name.last}\r\n            </div>\r\n            <div className=\"user__label\">Nick:</div>\r\n            <div className=\"user__username\">{login.username}</div>\r\n            <div className=\"user__label\">Country:</div>\r\n            <div className=\"user__country\">{location.country}</div>\r\n            <div className=\"user__label\">City:</div>\r\n\r\n            <div className=\"user__name\">{location.city}</div>\r\n            <div className=\"user__label\">Email:</div>\r\n            <div className=\"user__email\">{email}</div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { src: null };\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n  handleLogOut() {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/autorise\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"nav\">\r\n          <NavLink className=\"nav-link\" to=\"/\">\r\n            Главная\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/contacts\">\r\n            Контакты\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/profile\">\r\n            Профиль\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/posts\">\r\n            Посты\r\n          </NavLink>\r\n        </nav>\r\n        <button\r\n          type=\"button\"\r\n          className=\"logout\"\r\n          onClick={this.handleLogOut}\r\n        ></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Nav);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Form.scss\";\r\n\r\nconst API_URL = \"https://randomuser.me/api/\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    handleSubmitResult: 0,\r\n    loginValue: \"\",\r\n    passwordValue: \"\"\r\n  };\r\n\r\n  handleSubmitFacebook = async () => {\r\n    try {\r\n      const response = await fetch(API_URL);\r\n      const userData = await response.json();\r\n      const userKey = userData.results[0].login.sha256;\r\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n      localStorage.setItem(\"userKey\", JSON.stringify(userKey));\r\n      this.props.history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  handleRegistration = () => {\r\n    this.props.history.push(\"/register\");\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmitResult, loginValue, passwordValue } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>Login please</h1>\r\n        <form className=\"form\">\r\n          <label className=\"label\" htmlFor=\"login\">\r\n            login:\r\n            <input\r\n              value={loginValue}\r\n              onChange={event => {\r\n                this.setState({ loginValue: event.target.value });\r\n              }}\r\n              id=\"login\"\r\n              type=\"text\"\r\n            />\r\n          </label>\r\n          <label className=\"label\" htmlFor=\"password\">\r\n            password:\r\n            <input\r\n              value={passwordValue}\r\n              onChange={event => {\r\n                this.setState({ passwordValue: event.target.value });\r\n              }}\r\n              id=\"password\"\r\n              type=\"password\"\r\n            />\r\n          </label>\r\n          <button\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            onClick={this.handleRegistration}\r\n          >\r\n            Register\r\n          </button>\r\n          <button className=\"button\" type=\"submit\">\r\n            Login\r\n          </button>\r\n          <button\r\n            className=\"login-facebook\"\r\n            type=\"button\"\r\n            onClick={this.handleSubmitFacebook}\r\n          ></button>\r\n        </form>\r\n        {handleSubmitResult === 1 && (\r\n          <p className=\"error\">The data is entered incorrectly.</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Form);\r\n","import React from 'react';\r\nimport { Route, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest} \r\n            render={props => {\r\n                if (window.localStorage.getItem('userKey')) {\r\n                    return (\r\n                        <Component {...props} />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <Redirect to=\"/autorise\" />\r\n                )\r\n                    }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(ProtectedRoute);","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\n\r\nconst brownBack = brown[\"50\"];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: \"space-evenly\",\r\n    maxWidth: \"1200px\",\r\n    margin: \"auto\",\r\n    padding: \"2% 0 0\"\r\n  },\r\n  paper: {\r\n    width: 400\r\n  },\r\n  box: {\r\n    backgroundColor: brownBack,\r\n    marginTop: 1,\r\n    padding: \"10px 0\",\r\n    width: 370,\r\n    margin: \"auto\",\r\n    borderRadius: 5\r\n  },\r\n  box_son: {\r\n    padding: \"3px 10px\",\r\n    textAlign: \"left\",\r\n    fontSize: 12\r\n  },\r\n  box_son2: {\r\n    padding: \"0 10px\",\r\n    textAlign: \"left\",\r\n    fontSize: 12\r\n  },\r\n  buttonLookPosts: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    color: \"#9b8c8d\",\r\n    position: \"reletive\",\r\n    right: -263,\r\n    boxShadow: \"none\"\r\n  },\r\n  control: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport const ContactCard = props => {\r\n  const { user } = props;\r\n  const [spacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.box} justify=\"center\" spacing={0}>\r\n      <img\r\n        style={{\r\n          border: \"1px solid #dababa\",\r\n          borderRadius: \"5px\",\r\n          height: \"107px\"\r\n        }}\r\n        src={user.img}\r\n        alt=\"contact\"\r\n      />\r\n      <Box className={classes.box_son2}>\r\n        <Box className={classes.box_son}>Name: {user.name}</Box>\r\n        <Box className={classes.box_son}>Nickname: {user.username}</Box>\r\n\r\n        <Box className={classes.box_son}>Email: {user.email}</Box>\r\n\r\n        <Box className={classes.box_son}>\r\n          City:{user.address.city}\r\n          <br />\r\n          <a\r\n            style={{ paddingTop: \"5px\", display: \"block\" }}\r\n            href={\"http://\" + user.website}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Website\r\n          </a>\r\n        </Box>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { ContactCard } from \"../ContactCard\";\r\nimport PreLoader from \"../Preloader\";\r\nimport \"./User.scss\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: \"space-evenly\",\r\n    maxWidth: \"1200px\",\r\n    margin: \"auto\",\r\n    padding: \"2% 0 0\"\r\n  },\r\n  paper: {\r\n    width: 400\r\n  },\r\n  buttonLookPosts: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    color: \"#9b8c8d\",\r\n    position: \"reletive\",\r\n    right: -263,\r\n    boxShadow: \"none\"\r\n  },\r\n  control: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst User = props => {\r\n  const {\r\n    preLoader,\r\n    loadPostList,\r\n    loadUserList,\r\n    loadContactsData,\r\n    loadCommentList,\r\n    contacts,\r\n    userList\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    preLoader();\r\n    loadPostList();\r\n    loadUserList();\r\n    loadContactsData();\r\n    loadCommentList();\r\n  }, []);\r\n\r\n  const openUserPosts = user => {\r\n    props.onClickUser(user);\r\n    props.history.push(\"/user\");\r\n  };\r\n\r\n  const [spacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid className={classes.root} container justify=\"center\" spacing={spacing}>\r\n      {userList &&\r\n        userList.map((user, userIndex) => {\r\n          const userWithImage =\r\n            contacts && contacts.find((contact, index) => index === userIndex);\r\n\r\n          const userData = {\r\n            ...user,\r\n            img: userWithImage && userWithImage.picture.large\r\n          };\r\n\r\n          return (\r\n            <Grid key={userIndex} item>\r\n              <Paper className={classes.paper}>\r\n                <Box>\r\n                  <div className=\"user-id\">\r\n                    <Box component=\"span\">{user.id}</Box>\r\n                    {user.username}\r\n                  </div>\r\n                  <ContactCard user={userData} />\r\n                </Box>\r\n\r\n                <Button\r\n                  className={classes.buttonLookPosts}\r\n                  onClick={() => openUserPosts(userData)}\r\n                  variant=\"contained\"\r\n                >\r\n                  <VisibilityIcon />\r\n                  Look posts\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withRouter(User);\r\n","import { connect } from \"react-redux\";\r\n\r\nimport User from \"./User\";\r\nimport {\r\n  loadPostList,\r\n  loadUserList,\r\n  loadContactsData,\r\n  onClickUser,\r\n  loadCommentList,\r\n  preLoader\r\n} from \"../../store/actions\";\r\n\r\nconst mapStateToProps = ({ reducer }) => {\r\n  return {\r\n    posts: reducer.posts,\r\n    userList: reducer.userList,\r\n    isLoading: reducer.isLoading,\r\n    contacts: reducer.contacts,\r\n    comments: reducer.comments\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPostList,\r\n  loadUserList,\r\n  loadCommentList,\r\n  onClickUser,\r\n  loadContactsData,\r\n  preLoader\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n","import React from \"react\";\r\nimport { Field, Form, reduxForm } from \"redux-form\";\r\n\r\nimport \"./AddCommentForm.scss\";\r\n\r\nconst AddCommentForm = ({ handleSubmit }) => {\r\n  return (\r\n    <>\r\n      <h2>Add comment</h2>\r\n      <Form onSubmit={handleSubmit} className=\"form add-comment\">\r\n        <label className=\"label\" htmlFor=\"title\">\r\n          Title:\r\n          <Field\r\n            className=\"add-comment__textarea\"\r\n            name=\"title\"\r\n            component=\"textarea\"\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label className=\"label\" htmlFor=\"body\">\r\n          Body:\r\n          <Field\r\n            className=\"add-comment__textarea\"\r\n            name=\"body\"\r\n            component=\"textarea\"\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          отправить\r\n        </button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"AddComment\"\r\n})(AddCommentForm);\r\n","import React from \"react\";\r\nimport { Field, Form, reduxForm } from \"redux-form\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst EditCommentForm = ({ handleSubmit }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Field\r\n      className=\"edit-comment\"\r\n      name=\"UserCommentTitle\"\r\n      component=\"textarea\"\r\n    />\r\n    <Field\r\n      className=\"edit-comment\"\r\n      name=\"UserCommentBody\"\r\n      component=\"textarea\"\r\n    />\r\n    <button type=\"submit\">Save</button>\r\n  </Form>\r\n);\r\n\r\nexport default reduxForm({\r\n  form: \"comment\"\r\n})(EditCommentForm);\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport AddCommentForm from \"../AddCommentForm/AddCommentForm\";\r\nimport EditCommentForm from \"../EditCommentForm\";\r\nimport \"./index.scss\";\r\n\r\nconst grayBack = grey[\"600\"];\r\nconst brownColor = brown[\"600\"];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    width: \"90%\",\r\n    margin: \"10px auto 30px\",\r\n    padding: \"20px 10px 30px\",\r\n    borderRadius: 10\r\n  },\r\n  grid: {\r\n    //backgroundColor: grayBack,\r\n    marginTop: 10,\r\n    borderRadius: 10\r\n  },\r\n  comment: {\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 50\r\n  },\r\n  typography: {\r\n    fontFamily: \"Gloria Hallelujah\",\r\n    color: grayBack\r\n  },\r\n  title: {\r\n    fontFamily: \"unset\",\r\n    color: grayBack,\r\n    width: \" 80%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nexport const UserPosts = props => {\r\n  const {\r\n    posts,\r\n    comments,\r\n    currentUser,\r\n    deleteComment,\r\n    editComment,\r\n    stateComment\r\n  } = props;\r\n  let [isEditing, setEdit] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handleDeleteComment = id => {\r\n    deleteComment(id);\r\n  };\r\n\r\n  const handleSaveEditedComment = (values, id) => {\r\n    editComment(values, id);\r\n  };\r\n\r\n  const findPosts = () => {\r\n    if (posts) {\r\n      return posts.filter(post => {\r\n        return post.userId === currentUser;\r\n      });\r\n    }\r\n  };\r\n\r\n  const postsArray = findPosts();\r\n\r\n  const handleSubmitEdit = (values, id) => {\r\n    setEdit((isEditing = null));\r\n    handleSaveEditedComment(values, id);\r\n  };\r\n\r\n  return (\r\n    <Grid bgcolor=\"#efebe9\" className={classes.grid} item xs={12}>\r\n      {postsArray.map((post, postIndex) => {\r\n        const com = comments.filter(comment => comment.postId === post.id);\r\n        const postTitle = post.title[0].toUpperCase() + post.title.slice(1);\r\n        const postBody = post.body[0].toUpperCase() + post.body.slice(1);\r\n        return (\r\n          <Paper className={classes.paper} key={post.id}>\r\n            <b className=\"post-id\">{postIndex + 1}</b>\r\n            <Typography\r\n              paragraph={true}\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              variant=\"h6\"\r\n              className={classes.title}\r\n            >\r\n              {postTitle}\r\n            </Typography>\r\n            <Typography\r\n              paragraph={true}\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              className={classes.title}\r\n            >\r\n              {postBody}\r\n            </Typography>\r\n\r\n            <Box bgcolor=\"#f5f5f5\" className={classes.paper}>\r\n              <Typography className={classes.title} component=\"h5\" variant=\"h5\">\r\n                Comments:\r\n              </Typography>\r\n              {com.map((comment, index) => {\r\n                const id = comment.id;\r\n\r\n                const commentName =\r\n                  comment.name[0].toUpperCase() + comment.name.slice(1);\r\n                const commentBody =\r\n                  comment.body[0].toUpperCase() + comment.body.slice(1);\r\n\r\n                const editedCommentName =\r\n                  stateComment.name && stateComment.name;\r\n                const editedCommentBody =\r\n                  stateComment.body && stateComment.body;\r\n                const editedCommentId = stateComment.id && stateComment.id;\r\n\r\n                return (\r\n                  <Box\r\n                    boxShadow={3}\r\n                    className={classes.comment}\r\n                    bgcolor=\"white\"\r\n                    key={comment.id}\r\n                  >\r\n                    {isEditing !== index + 1 ? (\r\n                      <>\r\n                        <b>{index + 1}</b>\r\n                        <Box\r\n                          className={classes.typography}\r\n                          align=\"left\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          {editedCommentId === id && editedCommentName\r\n                            ? editedCommentName\r\n                            : commentName}\r\n                          <hr />\r\n                          {editedCommentId === id && editedCommentBody\r\n                            ? editedCommentBody\r\n                            : commentBody}\r\n                        </Box>\r\n\r\n                        <Box className=\"flex-wrapper\">\r\n                          <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={() => handleDeleteComment(id)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                          <Fab\r\n                            onClick={() => setEdit((isEditing = index + 1))}\r\n                            size=\"small\"\r\n                            aria-label=\"edit\"\r\n                          >\r\n                            <EditIcon />\r\n                          </Fab>\r\n                        </Box>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <EditCommentForm\r\n                          onSubmit={values => handleSubmitEdit(values, id)}\r\n                          initialValues={{\r\n                            UserCommentTitle: editedCommentName || comment.name,\r\n                            UserCommentBody: editedCommentBody || comment.body\r\n                          }}\r\n                        />\r\n                        <Box className=\"flex-wrapper\">\r\n                          <Fab\r\n                            style={{ margin: \"20px\" }}\r\n                            onClick={() => setEdit(null)}\r\n                            color=\"default\"\r\n                            size=\"small\"\r\n                            aria-label=\"edit\"\r\n                          >\r\n                            <CloseIcon />\r\n                          </Fab>\r\n                        </Box>\r\n                      </>\r\n                    )}\r\n                  </Box>\r\n                );\r\n              })}\r\n              <AddCommentForm />\r\n            </Box>\r\n          </Paper>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { UserPosts } from \"./UserPosts\";\r\nimport { deleteComment, editComment } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = ({ reducer }) => {\r\n  return {\r\n    stateComment: reducer.comment\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteComment,\r\n  editComment\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withRouter } from \"react-router\";\r\nimport UserPosts from \"../../UserPosts\";\r\nimport { ContactCard } from \"../../ContactCard\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./UserInfo.scss\";\r\n\r\nconst brownBack = brown[\"50\"];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    fontFamily: \"unset\",\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nfunction UserInfo(props) {\r\n  const { user, posts, comments } = props;\r\n  const classes = useStyles();\r\n\r\n  const redirectToPosts = () => {\r\n    props.history.push(\"/posts\");\r\n  };\r\n\r\n  return user ? (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        align=\"center\"\r\n        component=\"p\"\r\n        variant=\"h5\"\r\n        className={classes.title}\r\n      >\r\n        {user.username}\r\n      </Typography>\r\n      <Grid\r\n        className=\"current-card\"\r\n        border={1}\r\n        container={true}\r\n        alignContent=\"stretch\"\r\n        spacing={1}\r\n        justify=\"center\"\r\n      >\r\n        <ContactCard user={user} />\r\n        <UserPosts posts={posts} comments={comments} currentUser={user.id} />\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <div>{redirectToPosts()}</div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserInfo);\r\n","import { connect } from \"react-redux\";\r\n\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nconst mapStateToProps = ({ reducer }) => {\r\n  return {\r\n    user: reducer.user,\r\n    posts: reducer.posts,\r\n    userList: reducer.userList,\r\n    isLoading: reducer.isLoading,\r\n    contacts: reducer.contacts,\r\n    comments: reducer.comments\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserInfo);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Registration from \"./components/Registration\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Form from \"./components/Form/Form\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport \"./App.scss\";\r\nimport User from \"./components/User\";\r\nimport UserInfo from \"./components/User/UserInfo\";\r\nimport \"normalize.css\";\r\n\r\nconst App = () => (\r\n  <Switch>\r\n    <Route path=\"/autorise\" component={Form} />\r\n    <Route path=\"/register\" component={Registration} />\r\n    <>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path=\"/user\" component={UserInfo} />\r\n        <Route path=\"/posts\" component={User} />\r\n        <ProtectedRoute exact path=\"/\" component={HomePage} />\r\n        <ProtectedRoute path=\"/contacts\" component={Contacts} />\r\n        <ProtectedRoute path=\"/profile\" component={Profile} />\r\n      </Switch>\r\n    </>\r\n  </Switch>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/store';\r\nimport App from './App';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render((\r\n  <Provider store={configureStore()}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}